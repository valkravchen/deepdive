package com.deepdive.collection;

public class SetOptimizationGuide {
    /**
     * CASE 1: MediaContent.genres
     *
     * Текущая реализация: HashSet<Genre>
     *
     * Анализ:
     * - Жанры - это enum тип
     * - Порядок не важен
     * - Часто проверяем наличие (contains)
     * - Небольшое количество элементов (2-5 обычно)
     *
     * TODO: Какой Set использовать?
     * Обоснование:
     *
     *
     *
     *
     */

    /**
     * CASE 2: MediaContent.tags
     *
     * Текущая реализация: HashSet<String>
     *
     * Анализ:
     * - Теги - это String (не enum)
     * - Порядок не важен
     * - Часто добавляем и проверяем
     * - Количество может быть большим (5-20)
     *
     * TODO: Какой Set использовать?
     * Обоснование:
     *
     *
     *
     *
     */

    /**
     * CASE 3: SearchHistory.searchHistory
     *
     * Текущая реализация: LinkedHashSet<String>
     *
     * Анализ:
     * - История поисковых запросов
     * - Порядок КРИТИЧЕСКИ важен!
     * - Нужна уникальность
     * - Часто читаем последние элементы
     *
     * TODO: Какой Set использовать?
     * Обоснование:
     *
     *
     *
     *
     */

    /**
     * CASE 4: GenreFilter.selectedGenres
     *
     * Текущая реализация: EnumSet<Genre>
     *
     * Анализ:
     * - Фильтр по жанрам
     * - Жанры - enum тип
     * - Много операций над множествами
     * - Критична производительность
     *
     * TODO: Какой Set использовать?
     * Обоснование:
     *
     *
     *
     *
     */

    /**
     * CASE 5: RatingManager.getTopRated() возвращает Set
     *
     * Текущая реализация: LinkedHashSet<MediaContent>
     *
     * Анализ:
     * - Топ контента по рейтингу
     * - Порядок важен (от лучшего к худшему)
     * - Не должно быть дубликатов
     * - Часто выводится пользователю
     *
     * TODO: Какой Set использовать?
     * Обоснование:
     *
     *
     *
     *
     */

    /**
     * CASE 6: TagManager.getAllTags() возвращает Set
     *
     * Текущая реализация: HashSet<String>
     *
     * Анализ:
     * - Все уникальные теги из каталога
     * - Порядок не важен
     * - Используется для отображения облака тегов
     * - Может быть много тегов (100+)
     *
     * TODO: Какой Set использовать?
     * Но может быть другой вариант?
     * Обоснование:
     *
     *
     *
     *
     */

    /**
     * Сводная таблица рекомендаций
     */
}
